# This is a basic workflow to help you get started with Actions

name: TF-Plan-Helm-Test

# Controls when the workflow will run
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  TF_VERSION: 1.5.0
  HELM_VERSION: 3.12.0

permissions:
  contents: read
  pull-requests: write 

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    outputs:
      tf-comment: ${{ steps.tf-comment.outputs.comment-body }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Setup Terraform 
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Format
        id: fmt
        run: terraform -fmt -check
        continue-on-error: true
      
      - name: Terraform Init
        run: terraform init 

      - name: Terraform Plan 
        id: plan 
        run: terraform plan -no-color
        continue-on-error: true

      - name: Comment PR - Terraform
        uses: actions/github-script@v7
        id: tf-comment
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `### Terraform Plan ðŸ“–\`\`\`diff
            ${{ steps.plan.outputs.stdout }}
            \`\`\`
            **Format**: \`${{ steps.fmt.outcome }}\`
            **Plan**: \`${{ steps.plan.outcome }}\`
            `;
            await github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });

  helm-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Helm
        uses: azure/setup-helm@v4
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Helm Lint
        id: lint 
        run: helm lint charts/tf-helm

      - name: Helm unit Test (helm-unittest)
        run: |
          helm plugin  install https://github.com/helm-unittest/helm-unittest.git
          helm unittest charts/tf-helm --output-type junit --output-file test-results.xml

      - name: Comment PR - Helm 
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const lint = `${{ steps.lint.outcome }}`;
            const helmBody = `### Helm Test ðŸ”§
            - **lint**: ${lint}
            - unittest: generated test-results.xmlï¼ˆcould be downloaded from Actions Artifactsï¼‰
            `;
            await github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: helmBody
            });